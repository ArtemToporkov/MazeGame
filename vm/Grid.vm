function Grid.new 4
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 1
pop this 1
push argument 0
pop this 4
push constant 488
pop static 0
push constant 192
pop static 1
push static 0
push this 4
call Math.divide 2
pop this 3
push static 1
push this 4
call Math.divide 2
pop this 2
push this 3
push this 4
call Math.multiply 2
pop static 0
push this 2
push this 4
call Math.multiply 2
pop static 1
push this 2
push this 3
call Math.multiply 2
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 3
lt
not
if-goto WHILE_END1
push local 0
push this 3
call Math.multiply 2
push local 1
add
pop local 2
push local 2
push this 0
add
push local 0
push local 1
push this 4
push this 1
call Cell.new 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 2
push this 3
call Math.multiply 2
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 3
call Cell.deleteRight 1
pop temp 0
push pointer 0
return
function Grid.draw 3
push argument 0
pop pointer 0
push this 1
call Point.x 1
push this 1
call Point.y 1
push this 1
call Point.x 1
push static 0
add
push this 1
call Point.y 1
call Screen.drawLine 4
pop temp 0
push this 1
call Point.x 1
push this 1
call Point.y 1
push this 4
add
push this 1
call Point.x 1
push this 1
call Point.y 1
push static 1
add
call Screen.drawLine 4
pop temp 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 2
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push this 3
lt
not
if-goto WHILE_END1
push local 1
push this 3
call Math.multiply 2
push local 2
add
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Cell.draw 1
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.width 0
push argument 0
pop pointer 0
push static 0
return
function Grid.height 0
push argument 0
pop pointer 0
push static 1
return
function Grid.cells 0
push argument 0
pop pointer 0
push this 0
return
function Grid.cols 0
push argument 0
pop pointer 0
push this 3
return
function Grid.rows 0
push argument 0
pop pointer 0
push this 2
return
function Grid.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
push this 3
call Math.multiply 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Cell.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push this 1
call Point.dispose 1
pop temp 0
push constant 0
return
function Grid.isValidPosition 0
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
not
push argument 2
push constant 0
lt
not
and
push argument 1
push this 2
lt
and
push argument 2
push this 3
lt
and
return
